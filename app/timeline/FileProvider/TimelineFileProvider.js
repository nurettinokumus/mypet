"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs = require("tns-core-modules/file-system");
var TimeLineFileProvider = /** @class */ (function () {
    /**
     *
     */
    function TimeLineFileProvider() {
        this.documents = fs.knownFolders.documents();
    }
    TimeLineFileProvider.prototype.GetProfileImagePath = function (petId) {
        var resPath = "";
        var a = this.documents.getFolder(petId).getFolder("ProfileImages").eachEntity(function (e) {
            if (e.name.indexOf("profile") > -1) {
                resPath += e.path;
                return false;
            }
            return true;
        });
        return resPath;
    };
    TimeLineFileProvider.prototype.SaveProfileImage = function (petId, uri) {
        var documents = fs.knownFolders.documents();
        var sourceFile = fs.File.fromPath(uri);
        var separator = fs.path.separator;
        documents.getFolder(petId).getFolder("ProfileImages").clear();
        var path = fs.path.normalize(petId + separator + "ProfileImages" + separator + this.guid() + sourceFile.extension);
        var destinationFile = fs.knownFolders.documents().getFile(path);
        var source = sourceFile.readSync(function (e) { console.log(e); });
        destinationFile.writeSync(source, function (e) { console.log(e); });
        return destinationFile.path;
    };
    TimeLineFileProvider.prototype.guid = function () {
        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();
    };
    TimeLineFileProvider.prototype.s4 = function () {
        return Math.floor((1 + Math.random()) * 0x10000)
            .toString(16)
            .substring(1);
    };
    return TimeLineFileProvider;
}());
exports.TimeLineFileProvider = TimeLineFileProvider;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGltZWxpbmVGaWxlUHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJUaW1lbGluZUZpbGVQcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUFtRDtBQUNuRDtJQUNJOztPQUVHO0lBQ0g7UUFDSSxJQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDakQsQ0FBQztJQUVNLGtEQUFtQixHQUExQixVQUEyQixLQUFhO1FBRXBDLElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLENBQUMsVUFBVSxDQUFDLFVBQUMsQ0FBQztZQUM1RSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2pDLE9BQU8sSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFBO2dCQUNqQixNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ2pCLENBQUM7WUFDRCxNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2hCLENBQUMsQ0FBQyxDQUFBO1FBQ0YsTUFBTSxDQUFDLE9BQU8sQ0FBQztJQUNuQixDQUFDO0lBQ00sK0NBQWdCLEdBQXZCLFVBQXdCLEtBQWEsRUFBRSxHQUFXO1FBRTlDLElBQUksU0FBUyxHQUFHLEVBQUUsQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDNUMsSUFBSSxVQUFVLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdkMsSUFBSSxTQUFTLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDbEMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDOUQsSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxHQUFHLFNBQVMsR0FBRyxlQUFlLEdBQUcsU0FBUyxHQUFHLElBQUksQ0FBQyxJQUFJLEVBQUUsR0FBRyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUM7UUFFbkgsSUFBSSxlQUFlLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEUsSUFBSSxNQUFNLEdBQUcsVUFBVSxDQUFDLFFBQVEsQ0FBQyxVQUFBLENBQUMsSUFBTSxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDMUQsZUFBZSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsVUFBQSxDQUFDLElBQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzNELE1BQU0sQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDO0lBQ2hDLENBQUM7SUFDRCxtQ0FBSSxHQUFKO1FBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsR0FBRyxJQUFJLENBQUMsRUFBRSxFQUFFLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxFQUFFLEVBQUUsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLEVBQUUsRUFBRSxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsRUFBRSxFQUFFLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxFQUFFLEVBQUUsR0FBRyxJQUFJLENBQUMsRUFBRSxFQUFFLEdBQUcsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDO0lBQ2pJLENBQUM7SUFFRCxpQ0FBRSxHQUFGO1FBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsT0FBTyxDQUFDO2FBQzNDLFFBQVEsQ0FBQyxFQUFFLENBQUM7YUFDWixTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdEIsQ0FBQztJQUdMLDJCQUFDO0FBQUQsQ0FBQyxBQTVDRCxJQTRDQztBQTVDWSxvREFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBmcyBmcm9tIFwidG5zLWNvcmUtbW9kdWxlcy9maWxlLXN5c3RlbVwiO1xyXG5leHBvcnQgY2xhc3MgVGltZUxpbmVGaWxlUHJvdmlkZXIge1xyXG4gICAgLyoqXHJcbiAgICAgKlxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLmRvY3VtZW50cyA9IGZzLmtub3duRm9sZGVycy5kb2N1bWVudHMoKTtcclxuICAgIH1cclxuICAgIHByaXZhdGUgZG9jdW1lbnRzOiBmcy5Gb2xkZXJcclxuICAgIHB1YmxpYyBHZXRQcm9maWxlSW1hZ2VQYXRoKHBldElkOiBzdHJpbmcpOiBzdHJpbmcge1xyXG5cclxuICAgICAgICB2YXIgcmVzUGF0aCA9IFwiXCI7XHJcbiAgICAgICAgdmFyIGEgPSB0aGlzLmRvY3VtZW50cy5nZXRGb2xkZXIocGV0SWQpLmdldEZvbGRlcihcIlByb2ZpbGVJbWFnZXNcIikuZWFjaEVudGl0eSgoZSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZS5uYW1lLmluZGV4T2YoXCJwcm9maWxlXCIpID4gLTEpIHtcclxuICAgICAgICAgICAgICAgIHJlc1BhdGggKz0gZS5wYXRoXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfSlcclxuICAgICAgICByZXR1cm4gcmVzUGF0aDtcclxuICAgIH1cclxuICAgIHB1YmxpYyBTYXZlUHJvZmlsZUltYWdlKHBldElkOiBzdHJpbmcsIHVyaTogc3RyaW5nKTogc3RyaW5nIHtcclxuXHJcbiAgICAgICAgdmFyIGRvY3VtZW50cyA9IGZzLmtub3duRm9sZGVycy5kb2N1bWVudHMoKTtcclxuICAgICAgICB2YXIgc291cmNlRmlsZSA9IGZzLkZpbGUuZnJvbVBhdGgodXJpKTtcclxuICAgICAgICB2YXIgc2VwYXJhdG9yID0gZnMucGF0aC5zZXBhcmF0b3I7XHJcbiAgICAgICAgZG9jdW1lbnRzLmdldEZvbGRlcihwZXRJZCkuZ2V0Rm9sZGVyKFwiUHJvZmlsZUltYWdlc1wiKS5jbGVhcigpO1xyXG4gICAgICAgIHZhciBwYXRoID0gZnMucGF0aC5ub3JtYWxpemUocGV0SWQgKyBzZXBhcmF0b3IgKyBcIlByb2ZpbGVJbWFnZXNcIiArIHNlcGFyYXRvciArIHRoaXMuZ3VpZCgpICsgc291cmNlRmlsZS5leHRlbnNpb24pO1xyXG5cclxuICAgICAgICB2YXIgZGVzdGluYXRpb25GaWxlID0gZnMua25vd25Gb2xkZXJzLmRvY3VtZW50cygpLmdldEZpbGUocGF0aCk7XHJcbiAgICAgICAgdmFyIHNvdXJjZSA9IHNvdXJjZUZpbGUucmVhZFN5bmMoZSA9PiB7IGNvbnNvbGUubG9nKGUpIH0pO1xyXG4gICAgICAgIGRlc3RpbmF0aW9uRmlsZS53cml0ZVN5bmMoc291cmNlLCBlID0+IHsgY29uc29sZS5sb2coZSkgfSk7XHJcbiAgICAgICAgcmV0dXJuIGRlc3RpbmF0aW9uRmlsZS5wYXRoO1xyXG4gICAgfVxyXG4gICAgZ3VpZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5zNCgpICsgdGhpcy5zNCgpICsgJy0nICsgdGhpcy5zNCgpICsgJy0nICsgdGhpcy5zNCgpICsgJy0nICsgdGhpcy5zNCgpICsgJy0nICsgdGhpcy5zNCgpICsgdGhpcy5zNCgpICsgdGhpcy5zNCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHM0KCkge1xyXG4gICAgICAgIHJldHVybiBNYXRoLmZsb29yKCgxICsgTWF0aC5yYW5kb20oKSkgKiAweDEwMDAwKVxyXG4gICAgICAgICAgICAudG9TdHJpbmcoMTYpXHJcbiAgICAgICAgICAgIC5zdWJzdHJpbmcoMSk7XHJcbiAgICB9XHJcblxyXG5cclxufSJdfQ==